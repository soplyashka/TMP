@startuml UseCaseDiagram
left to right direction
skinparam packageStyle rect
actor Фонд
actor Соискатели_грантов
actor Эксперты
rectangle ИС {
  Соискатели_грантов --> (Выбор фонда)
  Соискатели_грантов --> (Сбор документов)
  Соискатели_грантов --> (Подача заявки)

  Фонд --> (Выдача гранта)
  Фонд --> (Проведение собеседования)
  Фонд --> (Отказ в выдаче гранта)

  Эксперты --> (Оценка заявки)
  Эксперты --> (Положительный ответ)
  Эксперты --> (Отрицательный ответ)


  (Положительный ответ) .> (Выдача гранта)
  (Отрицательный ответ) .> (Отказ в выдаче гранта)
  (Подача заявки) .> (Оценка заявки)
}
@endum

@startuml ClassDiagram
class Выбор_фонда{
 +код фонда
 +описание
 +наименование фонда
}
class Экспертиза{
 +код экспертизы
 +время(дата/время)
 +описание(текст)
 +код эксперта(число)
 +результат экспертизы
}
class подача_заявки{
 +код соискателя
 +время(дата/время)
 +описание(текст)
 +ФИО
 +логин
 +бизнес-план
}

class соискатели_грантов{
+ФИО
+логин
+код соискателя
+паспорт
+бизнес-план
}
class эксперты{
+код пользователя
+ФИО
+логин
+пароль
+роль
}
class выдача_гранта{
+результат экспертизы
+код фонда
+код соискателя
+сумма гранта
}

Выбор_фонда <.. соискатели_грантов
подача_заявки <.. соискатели_грантов
эксперты <.. подача_заявки
Экспертиза <.. эксперты
выдача_гранта <.. Экспертиза
@enduml

@startuml SequenceDiagram
participant Подача_заявки_на_грант as Foo
actor       Соискатели    as Foo1
actor       Фонд    as Foo6
actor       Эксперт    as Foo7
participant    Подача_заявки    as Foo2
participant    Оценка_заявки     as Foo3
participant    Результаты_экспертизы      as Foo4
participant    Выдача_гранта   as Foo5

Foo1 -> Foo6 : Выбор фонда
Foo1 -> Foo2 : Сбор документов и подача заявки
Foo2 -> Foo3 : На экспертизу
Foo6 -> Foo5 : Принятие решения о финансировании
Foo4 -> Foo6 : Ознакомление с результатами экспертизы
Foo7 -> Foo3 : Проведение экспертизы
Foo7 -> Foo4 : Итоги экспертизы
Foo5 -> Foo1 : Выдача_гранта
@enduml
